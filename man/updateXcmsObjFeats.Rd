% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/updateXcmsObjFeatsFunctions.R
\name{updateXcmsObjFeats}
\alias{updateXcmsObjFeats}
\title{Update features in an XCMS object}
\usage{
updateXcmsObjFeats(
  xcms_obj,
  feature_metrics,
  feature_labels,
  log_formula = feat_class ~ med_cor + med_snr,
  likelihood_threshold = 0.5,
  verbosity = 2
)
}
\arguments{
\item{xcms_obj}{The XCMS object from which features were initially extracted,
usually with `extractChromMetrics`}

\item{feature_metrics}{A data.frame with columns used to construct the 
feature quality model.}

\item{feature_labels}{A character vector named with feature IDs and entries
corresponding to the peak quality (either "Good", "Bad", or NA).}

\item{log_formula}{The formula to use when predicting feature quality from
the feature metrics. This formula is passed to `glm` as-is, so make sure that
the predictive features exist in the feature_metrics data.frame.}

\item{likelihood_threshold}{A scalar numeric above which features will be
kept if their predicted probability exceeds.}

\item{verbosity}{Scalar value between zero and two determining how much 
diagnostic information is produced. Zero should return nothing, one should
return text-based progress markers, and 2 will return diagnostic plots.}
}
\value{
The initial xcms_obj but only containing features that exceed the
provided quality threshold (as established in likelihood space)
}
\description{
After metrics have been extracted (typically with `extractChromMetrics`) and 
labeling has occurred (typically with `labelFeatsManual` or `labelFeatsLasso`),
low quality features can be removed from the XCMS object to improve downstream
processing. This function wraps `logModelFeatQuality` and automatically edits
the features within the provided XCMS object.
}
