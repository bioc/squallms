% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/updateXcmsObjFeatsFunctions.R
\name{logModelFeatQuality}
\alias{logModelFeatQuality}
\title{Turn 0-1 likelihood values into categorical (good/bad) classifications}
\usage{
logModelFeatQuality(
  feature_metrics,
  feature_labels,
  log_formula = feat_class ~ med_cor + med_snr,
  likelihood_threshold = 0.5,
  verbosity = 2
)
}
\arguments{
\item{feature_metrics}{A data.frame with columns used to construct the 
feature quality model.}

\item{feature_labels}{A character vector named with feature IDs and entries
corresponding to the peak quality (either "Good", "Bad", or NA).}

\item{log_formula}{The formula to use when predicting feature quality from
the feature metrics. This formula is passed to `glm` as-is, so make sure that
the predictive features exist in the feature_metrics data.frame.}

\item{likelihood_threshold}{A scalar numeric above which features will be
kept if their predicted probability exceeds.}

\item{verbosity}{Scalar value between zero and two determining how much 
diagnostic information is produced. Zero should return nothing, one should
return text-based progress markers, and 2 will return diagnostic plots.}
}
\description{
This function wraps `logModelFeatProb` for modeling of feature quality
to estimate the quality of every feature in the dataset and classify
them as good/bad based on whether they exceed the provided 
`likelihood_threshold`. Lower likelihood thresholds (0.01, 0.1) will produce
more false positives (noise peaks included when they shouldn't be). Higher 
likelihood thresholds (0.9, 0.99) will produce more false negatives (good
peaks removed when they shouldn't be).
}
